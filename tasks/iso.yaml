- name: Build our additional variables
  set_fact:
    cmd_args: ""

- name: Add ip address info
  set_fact:
    cmd_args: "{{ cmd_args }} ip={{ ipv4 }}::{{ gateway }}:{{ netmask }}:{{ inventory_hostname }}:{{ interface }}:none"

- name: Add install DNS
  set_fact:
    cmd_args: "{{ cmd_args }} nameserver={{ iso_dns[0] }}"

# The following can likely be done better but I can't think of a cleaner way just yet.
# - name: Add second install DNS
#   set_fact:
#     cmd_args: "{{ cmd_args }} nameserver={{ dns[1] }}"
#   when: "{{ dns[1] }} is defined"
#   ignore_errors: true

# - name: Add third install DNS
#   set_fact:
#     cmd_args: "{{ cmd_args }} nameserver={{ dns[2] }}"
#   when: "{{ dns[2] }} is defined"
#   ignore_errors: true

- name: Add ip address info for second NIC
  set_fact:
    cmd_args: "{{ cmd_args }} ip={{ nic2_ipv4 }}::{{ gateway2 }}:{{ netmask2 }}:{{ inventory_hostname }}:{{ interface2 }}:none"
  when: nic2_ipv4 is defined

- name: Add install device name
  set_fact:
    cmd_args: "{{ cmd_args }} coreos.inst.install_dev={{ install_drive | default(sda) }}"

# - name: Add image_url
#   set_fact:
#     cmd_args: "{{ cmd_args }} {{coreos_inst_url}}"

# - name: blacklist nvidia gpu opensource driver
#   set_fact:
#     cmd_args: "{{ cmd_args }} rdblacklist=nouveau"

- name: Add ignition_url
  set_fact:
    cmd_args: "{{ cmd_args }} coreos.inst.ignition_url=http://{{ helper.ipaddr }}:8080/ignition/{{ inventory_hostname_short }}.ign"

# - block:
#   - name: Replace the grub.cfg file
#     template:
#       src: grub.cfg-multi.j2
#       dest: /tmp/rhcos-iso/boot/grub/grub.cfg
#     become: true
#     delegate_to: localhost

#   - name: Create new ISO image for ppc64le
#     command: >
#           /usr/bin/mkisofs -U -A 'RHCOS-ppc64le' -V 'RHCOS-ppc64le' -volset 'RHCOS-ppc64le' -J -joliet-long -r -v -T
#             -x ./lost+found -o /tmp/rhcos-install-{{ inventory_hostname_short }}.iso -chrp-boot .
#     args:
#       chdir: /tmp/rhcos-iso/
#     become: true
#     delegate_to: localhost
#   when: arch == 'ppc64le'

- block:
  - name: Replace the isolinux.cfg file
    template:
      src: ../templates/isolinux.cfg-multi.j2
      dest: /tmp/rhcos-iso/isolinux/isolinux.cfg
    become: true
    delegate_to: localhost

  - name: Replace the grub.cfg file
    template:
      src: ../templates/grub.cfg-multi.j2
      dest: /tmp/rhcos-iso/EFI/redhat/grub.cfg
    become: true
    delegate_to: localhost
  
  - name: Create new ISO image for x86_64
    command: >
           /usr/bin/mkisofs -U -A 'RHCOS-CustomIso' -V 'RHCOS-CustomIso' -volset 'RHCOS-CustomIso' -J -joliet-long -r -v -T 
             -x ./lost+found -o /data/install/rhcos_install-{{ inventory_hostname_short}}.iso -b isolinux/isolinux.bin  
             -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e images/efiboot.img 
             -no-emul-boot .
    args:
      chdir: /tmp/rhcos-iso/
    become: true
    delegate_to: localhost
  when: arch == 'x86_64'